# Generated by Django 3.1.2 on 2021-03-01 12:52

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CentersAct5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Center_or_Cell', models.CharField(max_length=150, verbose_name='Name of Center/Cell')),
                ('Program_or_Activity', models.CharField(max_length=150, verbose_name='Name of Program/Activity')),
                ('sponsoring_Agency', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('level', models.CharField(max_length=150)),
                ('no_of_Participants', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CulturalAct3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_Name', models.CharField(max_length=150)),
                ('organized_By', models.CharField(max_length=150)),
                ('level', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('Prize_Won_or_Medal', models.CharField(max_length=150, verbose_name='Prize Won/ Medal')),
                ('no_of_Students_Participated', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CulturalCount3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('no_of_events', models.PositiveIntegerField(default=12)),
                ('solo_Performances', models.PositiveIntegerField(default=10)),
                ('team_Performances', models.PositiveIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='CurStudSponsor5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title of Project')),
                ('company_Representative', models.CharField(max_length=250, verbose_name='Name of Company Representative')),
                ('sponsoring_Company', models.CharField(max_length=250, verbose_name='Name of Sponsoring company')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Duration (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Duration (To)')),
                ('grant', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=150, verbose_name='Grant Received')),
                ('status', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('department', models.CharField(max_length=128, primary_key=True, serialize=False, unique=True, verbose_name='Department Name')),
            ],
        ),
        migrations.CreateModel(
            name='DeptEvent2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=150, verbose_name='Activity Name')),
                ('school', models.CharField(max_length=150)),
                ('school_Contact', models.CharField(max_length=250, verbose_name='School Contact Details')),
                ('faculty_name', models.CharField(max_length=250, verbose_name='Faculty Name')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='From')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='To')),
            ],
        ),
        migrations.CreateModel(
            name='DeptStartUp6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startup_name', models.CharField(max_length=150)),
                ('startup_nature', models.CharField(max_length=150)),
                ('start_date', models.CharField(max_length=150, verbose_name='Commencement Date')),
                ('founder', models.CharField(max_length=150)),
                ('LLP_number', models.IntegerField(verbose_name='LLP number')),
                ('website', models.URLField(max_length=150)),
                ('team_members', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Ecell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=250)),
                ('organised_By', models.CharField(max_length=150)),
                ('level', models.CharField(max_length=100)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('no_of_Students_Participated', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='EcellCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_Name', models.CharField(max_length=250)),
                ('civil', models.PositiveIntegerField(default=1)),
                ('computer', models.PositiveIntegerField(default=10)),
                ('E_andTC', models.PositiveIntegerField(default=10)),
                ('mechanical', models.PositiveIntegerField(default=10)),
                ('first_Year', models.PositiveIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraCurr1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=150)),
                ('organized_by', models.CharField(max_length=150)),
                ('level', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('no_of_Students_Participated', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='FacBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500, verbose_name='Title')),
                ('author_name', models.CharField(max_length=150, verbose_name='Name of author(s)')),
                ('publication', models.CharField(max_length=150, verbose_name='Publication')),
                ('ISBN', models.IntegerField(verbose_name='ISBN number')),
            ],
        ),
        migrations.CreateModel(
            name='IndInst5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_of_board', models.CharField(max_length=150, verbose_name='Type of Board/Council')),
                ('name_of_industry_member', models.CharField(max_length=150)),
                ('designation', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=250)),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('tenure', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='IndInst6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('title_of_invention', models.CharField(max_length=150)),
                ('patent_no', models.CharField(max_length=150)),
                ('date_of_grant', models.DateField(default=datetime.date.today, verbose_name='Date of Grant/File')),
                ('name_of_company', models.CharField(max_length=256)),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('date_of_adoption', models.DateField(default=datetime.date.today)),
            ],
        ),
        migrations.CreateModel(
            name='IndInst7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_of_project', models.CharField(max_length=150)),
                ('name_of_coordinator', models.CharField(max_length=150)),
                ('name_of_sponsoring_company', models.CharField(max_length=150)),
                ('duration_from', models.DateField(default=datetime.date.today, verbose_name='Duration(From)')),
                ('duration_to', models.DateField(default=datetime.date.today, verbose_name='Duration(To)')),
                ('grant_received', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=150)),
                ('status_of_project', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='IndInst8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=256, verbose_name='Name of Company/ organization')),
                ('title_of_project', models.CharField(max_length=150)),
                ('revenue_generated', models.IntegerField()),
                ('dates_from', models.DateField(default=datetime.date.today, verbose_name='Dates (From)')),
                ('dates_to', models.DateField(default=datetime.date.today, verbose_name='Dates (To)')),
                ('status_of_project', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Library1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], default=2021, unique=True, verbose_name='Year')),
                ('month', models.CharField(choices=[('Janaury', 'Janaury'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], default=3, max_length=150, unique=True, verbose_name='Month')),
                ('total_Books', models.PositiveIntegerField(verbose_name='Total Number of Books')),
                ('books_Added_This_Month', models.PositiveIntegerField(verbose_name='Number of Books added This Month')),
                ('new_Books_Cost', models.PositiveIntegerField(verbose_name='Cost spent on new books This Month (Rs.)')),
                ('number_of_Volumes', models.PositiveIntegerField(verbose_name='Number of Volumes')),
                ('number_of_International_Journals', models.PositiveIntegerField(verbose_name='Number of International Journals')),
                ('number_of_National_Journals', models.PositiveIntegerField(verbose_name='Number of National Journals')),
                ('current_Periodicals', models.PositiveIntegerField(verbose_name='Current Periodicals')),
                ('thesis_and_Dissertations', models.PositiveIntegerField(verbose_name='Thesis & Dissertations')),
                ('video_Recordings_open_NPTEL_or_DMS_close', models.PositiveIntegerField(verbose_name='Video Recordings (NPTEL/DMS)')),
            ],
        ),
        migrations.CreateModel(
            name='Library2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.CharField(max_length=250)),
                ('civil', models.PositiveIntegerField(default=1)),
                ('computer', models.PositiveIntegerField(default=10)),
                ('E_andTC', models.PositiveIntegerField(default=10)),
                ('mechanical', models.PositiveIntegerField(default=10)),
                ('first_Year', models.PositiveIntegerField(default=10)),
                ('total', models.PositiveIntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Placement1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(choices=[(2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020), (2021, 2021)], default=2021, unique=True, verbose_name='year')),
                ('companies_Visited', models.PositiveIntegerField(verbose_name='Number of Companies visited for Campus Recruitment')),
                ('students_Placed', models.PositiveIntegerField(verbose_name='Number of Students Placed')),
                ('students_Placed_Percentage', models.PositiveIntegerField(default=1, verbose_name='Percentage of students placed')),
                ('max_Salary', models.PositiveIntegerField(default=100000, validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(10000000)], verbose_name='Maximum Salary offered (p.a.)')),
                ('min_Salary', models.PositiveIntegerField(default=100000, validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(10000000)], verbose_name='Minimum Salary offered (p.a.)')),
                ('average_Salary', models.PositiveIntegerField(default=100000, validators=[django.core.validators.MinValueValidator(100000), django.core.validators.MaxValueValidator(10000000)], verbose_name='Average of salary offered (p.a.)')),
            ],
        ),
        migrations.CreateModel(
            name='Placement2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_company', models.CharField(max_length=150)),
                ('sector', models.CharField(max_length=150)),
                ('discipline', models.CharField(max_length=150)),
                ('dates_of_drive', models.CharField(max_length=150)),
                ('no_of_eligible_students', models.PositiveIntegerField()),
                ('no_of_students_offered_jobs', models.PositiveIntegerField()),
                ('package', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Placement3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_company', models.CharField(max_length=150)),
                ('sector', models.CharField(max_length=150)),
                ('location_open_College_or_Industry_close', models.CharField(max_length=200)),
                ('date_of_walk_in', models.DateField(default=datetime.date.today, verbose_name='Date of Walk-In')),
                ('no_of_students_appeared', models.PositiveIntegerField()),
                ('no_of_students_offered_jobs', models.PositiveIntegerField()),
                ('package', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Placement5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_student', models.CharField(max_length=150)),
                ('discipline', models.CharField(max_length=150)),
                ('type_of_self_employment', models.CharField(choices=[('Start up', 'Start up'), ('NGO', 'NGO')], max_length=150)),
                ('name_of_firm_or_company', models.CharField(max_length=150, verbose_name='Name of Firm/ Company')),
                ('products_or_services_offered', models.CharField(max_length=150, verbose_name='Products/ Services offered')),
            ],
        ),
        migrations.CreateModel(
            name='ResFunds2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funding_agency', models.CharField(max_length=150)),
                ('grants_recieved', models.IntegerField(default=0)),
                ('grants_utilized', models.IntegerField(default=0)),
                ('remaining_grant', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ResIndustrial7',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title of the paper')),
                ('authors_Name', models.CharField(max_length=150)),
                ('co_Author_Name', models.CharField(max_length=150)),
                ('name_of_Company', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('name_of_Conference_or_Journal', models.CharField(max_length=150, verbose_name='Name of Conference/Details of Journal')),
                ('location', models.CharField(max_length=150)),
                ('url', models.URLField(max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialAct4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_Name', models.CharField(max_length=150)),
                ('location', models.CharField(max_length=150)),
                ('no_of_Faculties_Participated', models.CharField(max_length=150, verbose_name='No. of Faculties Participated')),
                ('no_of_Students_Participated', models.CharField(max_length=150, verbose_name='No. of Students Participated')),
                ('no_of_People_Benefited', models.CharField(max_length=150, verbose_name='No. of people benefited')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('Awards_or_Recognition_open_if_any_close', models.CharField(max_length=150, verbose_name='Awards/Recognition (if any)')),
            ],
        ),
        migrations.CreateModel(
            name='StudFac2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_or_division', models.CharField(max_length=150)),
                ('type_of_self_learning_facility', models.CharField(choices=[('', 'Choose...'), ('Webinars', 'Webinars'), ('Podcast', 'Podcast'), ('MOOC’s', 'MOOC’s'), ('NPTEL courses', 'NPTEL courses'), ('Myexamo', 'Myexamo'), ('Others', 'Others')], default=1, max_length=150)),
                ('name_of_subject', models.CharField(max_length=150)),
                ('no_of_student_participated', models.PositiveIntegerField()),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('certificate_or_award_received_by_students', models.CharField(blank=True, max_length=150, verbose_name='Certificate/Award Received by students (if any)')),
            ],
        ),
        migrations.CreateModel(
            name='StudFac4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_activity', models.CharField(choices=[('', 'Choose...'), ('Soft Skill Development', 'Soft Skill Development'), ('Remedial Coaching', 'Remedial Coaching'), ('Language Lab', 'Language Lab'), ('Yoga', 'Yoga'), ('Meditation', 'Meditation'), ('Personal Counseling', 'Personal Counseling'), ('Bridge Courses', 'Bridge Courses'), ('Competitive Examination', 'Competitive Examination'), ('Higher', 'Higher')], default=1, max_length=150)),
                ('date_of_implementation', models.DateField(default=datetime.date.today)),
                ('no_of_students_enrolled', models.PositiveIntegerField()),
                ('agencies_involved', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='StudFac5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_of_the_professional_development_program', models.CharField(max_length=150)),
                ('organized_for_faculty_or_staff', models.CharField(max_length=150, verbose_name='Organized for Faculty/Staff')),
                ('duration_open_from_close', models.DateField(default=datetime.date.today, verbose_name='Duration (From)')),
                ('duration_open_to_close', models.DateField(default=datetime.date.today, verbose_name='Duration (To)')),
                ('no_of_Participants', models.PositiveIntegerField()),
                ('agencies_involved', models.CharField(max_length=250)),
                ('organizing_department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudFac3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_student', models.CharField(max_length=150)),
                ('name_of_competitive_exam_appeard_or_qualified', models.CharField(choices=[('', 'Choose...'), ('MPSC', 'MPSC'), ('UPSC', 'UPSC'), ('GATE', 'GATE'), ('GRE', 'GRE'), ('IELTS', 'IELTS'), ('TOEFL', 'TOEFL'), ('CAT', 'CAT'), ('Others', 'Others')], default=1, max_length=150)),
                ('competitive_exam_seat_no', models.CharField(max_length=150)),
                ('score', models.FloatField()),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudFac1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_or_division', models.CharField(max_length=150)),
                ('type_of_meeting_open_GFM_or_HOD_close', models.CharField(max_length=150, verbose_name='Type of meeting (GFM/HOD)')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('type_of_mentoring', models.CharField(max_length=150)),
                ('dates_of_mentoring_activity', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='StudentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class', models.CharField(choices=[('', 'Choose...'), ('SE', 'SE'), ('TE', 'TE'), ('BE', 'BE')], default='', max_length=150)),
                ('exam_Type', models.CharField(choices=[('', 'Choose...'), ('MID SEM', 'MID SEM'), ('PRELIMS', 'PRELIMS'), ('END SEM', 'END SEM')], default='', max_length=150)),
                ('subject', models.CharField(choices=[('', 'Choose...'), ('COMPUTER SUBJECTS', (('DBMS', 'DBMS'), ('TOC', 'TOC'), ('CN', 'CN'), ('SEMP', 'SEMP'), ('ISEE', 'ISEE'))), ('ENTC SUBJECTS', (('ENTC1', 'ENTC1'), ('ENTC2', 'ENTC2'), ('ENTC3', 'ENTC3'), ('ENTC4', 'ENTC4'), ('ENTC5', 'ENTC5'))), ('MECHANICAL SUBJECTS', (('MECH1', 'MECH1'), ('MECH1', 'MECH1'), ('MECH1', 'MECH1'), ('MECH1', 'MECH1'), ('MECH1', 'MECH1'))), ('CIVIL SUBJECTS', (('C1', 'C1'), ('C2', 'C2'), ('C3', 'C3'), ('C4', 'C4'), ('C5', 'C5'))), ('ENGINEERING SCIENCE SUBJECTS', (('PHYSICS', 'PHYSICS'), ('MATHS', 'MATHS'), ('CHEMISTRY', 'CHEMISTRY'), ('ELECTRONICS', 'ELECTRONICS'), ('ELECTRICAL', 'ELECTRICAL'), ('GRAPHICS', 'GRAPHICS'), ('MECHANICS', 'MECHANICS')))], default='', max_length=150)),
                ('exam_Date', models.DateField(default=datetime.date.today, verbose_name='Exam Date')),
                ('appeared', models.IntegerField()),
                ('passed', models.IntegerField()),
                ('percentage', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Percentage')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ResProject1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('name', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today)),
                ('agency', models.CharField(max_length=150)),
                ('other', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ResNational4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title of the paper')),
                ('authors_name', models.CharField(max_length=150)),
                ('journal_name', models.CharField(max_length=150)),
                ('date_of_Publication', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('volume_Issue_ICV', models.CharField(max_length=150, verbose_name='Volume, Issue, Page Number and Impact Factor/ICV')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('approval', models.CharField(choices=[('', 'Choose...'), ('UGC', 'UGC'), ('SCOPUS', 'SCOPUS'), ('Web of Science', 'Web of Science'), ('Other', 'Other')], default='', max_length=150)),
                ('url', models.URLField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ResInternational3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('authors_name', models.CharField(max_length=150)),
                ('journal_name', models.CharField(max_length=150)),
                ('date_of_publication', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('volume_Issue_ICV', models.CharField(max_length=150, verbose_name='Volume, Issue, Page Number and Impact Factor/ICV')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('approval', models.CharField(choices=[('', 'Choose...'), ('UGC', 'UGC'), ('SCOPUS', 'SCOPUS'), ('Web of Science', 'Web of Science'), ('Other', 'Other')], default='', max_length=150)),
                ('url', models.URLField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.TextField(blank=True, choices=[('admin', 'admin'), ('HOD', 'HOD'), ('sadmin', 'sadmin'), ('teacher', 'teacher'), ('non-teach', 'non-teach')], default='non-teach', max_length=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfessionalPrac9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_Name', models.CharField(max_length=150)),
                ('professional_Practice_Type', models.CharField(max_length=150, verbose_name='Type of professional practices')),
                ('designation', models.CharField(max_length=150, verbose_name='Designation in Professional Practices')),
                ('organising_Institute', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='Placement4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_student', models.CharField(max_length=150)),
                ('name_of_employer', models.CharField(max_length=150)),
                ('date_of_selection', models.DateField(default=datetime.date.today, verbose_name='Date of Selection')),
                ('package', models.PositiveIntegerField()),
                ('appointment_reference_no', models.CharField(max_length=150)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='NationalAttend11',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_Name', models.CharField(max_length=150)),
                ('conference_Name', models.CharField(max_length=150, verbose_name='Name of the Conference')),
                ('organised_By', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('location', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='InternationalAttend12',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_Name', models.CharField(max_length=150)),
                ('conference_Name', models.CharField(max_length=150, verbose_name='Name of the Conference')),
                ('organised_By', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('location', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='IndInst9',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty_coordinator', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=256, verbose_name='Name of Company/ organization')),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('date_of_MOU', models.DateField(default=datetime.date.today)),
                ('purpose_of_MOU', models.TextField()),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='IndInst4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=256)),
                ('date_of_appointment', models.DateField(default=datetime.date.today)),
                ('type_of_board', models.CharField(max_length=150, verbose_name='Type of Board/Council')),
                ('designation_of_faculty', models.CharField(max_length=150)),
                ('meeting_date', models.DateField(blank=True, verbose_name='Meeting Date(if any)')),
                ('department', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='IndInst3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=256)),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('title_of_training', models.CharField(max_length=256)),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Dates (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Dates (To)')),
                ('outcome', models.TextField()),
                ('department', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='IndInst2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_faculty', models.CharField(max_length=150)),
                ('name_of_company', models.CharField(max_length=256)),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('title_of_training', models.CharField(max_length=256)),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Dates (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Dates (To)')),
                ('outcome', models.TextField()),
                ('department', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='IndFacvisit1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty', models.CharField(max_length=150)),
                ('company', models.CharField(max_length=256, verbose_name='Name of Company')),
                ('sector', models.CharField(choices=[('Agriculture', 'Agriculture'), ('Banking', 'Banking'), ('Construction', 'Construction'), ('Consumer durables', 'Consumer durables'), ('Engineering', 'Engineering'), ('Health care', 'Health care'), ('IT', 'IT'), ('Metal and mining', 'Metal and mining'), ('Oil and Gas', 'Oil and Gas'), ('Power', 'Power'), ('Retail', 'Retail'), ('Service', 'Service'), ('Transport', 'Transport'), ('others', 'others')], max_length=150)),
                ('purpose', models.TextField(max_length=256, verbose_name='Purpose of Visit')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Dates (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Dates (To)')),
                ('outcome', models.TextField()),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='FacPatents10',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_Name', models.CharField(max_length=150)),
                ('invention_Title', models.CharField(max_length=150, verbose_name='Title of Invention')),
                ('patent_Number', models.IntegerField(verbose_name='Patent/Application Number')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('patent_Status', models.CharField(max_length=150, verbose_name='Current Status of Patent')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='FacEvents8',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_Type', models.CharField(max_length=150)),
                ('event_Name', models.CharField(max_length=150)),
                ('name_of_Faculty', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('level', models.CharField(max_length=150)),
                ('amount', models.IntegerField(default=0)),
                ('organising_Institute', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='FacAchieve',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty_Name', models.CharField(max_length=150, verbose_name='Faculty Name')),
                ('achievement', models.CharField(max_length=150)),
                ('level', models.CharField(max_length=150)),
                ('dates', models.DateField(default=datetime.date.today, verbose_name='Dates')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraCurr2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_of_the_sport_or_team', models.CharField(max_length=250, verbose_name='Name of the Sport / Team')),
                ('student_ID_number', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=100)),
                ('rank', models.PositiveIntegerField(default=1)),
                ('name_of_department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ExtraAct6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('faculty', models.CharField(max_length=150)),
                ('activity', models.CharField(max_length=256)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('achievement', models.CharField(max_length=150)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='DeptStudPart5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=150)),
                ('event_type', models.CharField(max_length=150)),
                ('event_name', models.CharField(max_length=150)),
                ('organising_Institute', models.CharField(max_length=264)),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='From')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='To')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('level', models.CharField(max_length=150)),
                ('awards', models.CharField(max_length=264, verbose_name='Recognition Awards')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='DeptProEvent3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=150)),
                ('resourse_person', models.CharField(max_length=150)),
                ('resourse_person_contact', models.IntegerField()),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='From')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='To')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='DeptFacultyDev4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('program', models.CharField(max_length=150)),
                ('agency', models.CharField(max_length=150)),
                ('amount_Sponsored', models.IntegerField(default=0)),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='From')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='To')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('level', models.CharField(max_length=150)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='DeptEvent1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(max_length=150, verbose_name='Event Type')),
                ('event_name', models.CharField(max_length=150, verbose_name='Event Name')),
                ('guest_name', models.CharField(max_length=150, verbose_name='Guest Name')),
                ('guest_Affiliation', models.CharField(max_length=250, verbose_name='Affiliation of guest')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='From')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='To')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CurStudVisit4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=250, verbose_name='Name of Company')),
                ('sector', models.CharField(max_length=250)),
                ('faculty_Name', models.CharField(max_length=150, verbose_name='Faculty Name')),
                ('no_of_Students', models.IntegerField(verbose_name='No of Students')),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Duration (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Duration (To)')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CurStudTrain3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_name', models.CharField(max_length=150, verbose_name='Name of Student')),
                ('company', models.CharField(max_length=250, verbose_name='Name of Company')),
                ('sector', models.CharField(max_length=250)),
                ('from_date', models.DateField(default=datetime.date.today, verbose_name='Duration (From)')),
                ('to_date', models.DateField(default=datetime.date.today, verbose_name='Duration (To)')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CurGuestLect1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest', models.CharField(max_length=150, verbose_name='Name of Guest')),
                ('organization', models.CharField(max_length=150, verbose_name='Company/Organization Represented')),
                ('designation', models.CharField(max_length=150)),
                ('topic', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CurExptLect2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest', models.CharField(max_length=150, verbose_name='Name of Guest')),
                ('organization', models.CharField(max_length=150, verbose_name='Company/Organization Represented')),
                ('designation', models.CharField(max_length=150)),
                ('topic', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('no_of_Participants', models.IntegerField(verbose_name='No of Participants')),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ConfNational6',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title of the paper')),
                ('authors_Name', models.CharField(max_length=150)),
                ('conference_Name', models.CharField(max_length=150)),
                ('oraganised_by', models.CharField(max_length=150)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('location', models.CharField(max_length=150)),
                ('url', models.URLField(max_length=150, null=True)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='ConfInternational5',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title of the paper')),
                ('authors_Name', models.CharField(max_length=150, null=True)),
                ('conference_Name', models.CharField(max_length=150, null=True)),
                ('oraganised_by', models.CharField(max_length=150, null=True)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('amount', models.IntegerField(default=0, verbose_name='Amount (if paid by institute)')),
                ('location', models.CharField(max_length=150, null=True)),
                ('url', models.URLField(max_length=150, null=True)),
                ('department', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='department.department')),
            ],
        ),
    ]
